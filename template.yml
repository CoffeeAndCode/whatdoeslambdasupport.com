AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  whatdoeslambdasupport.com

Parameters:
  DeploymentTime:
    Type: String
    Description: Time of the deployment needed to force custom function exectution.

  WebsiteBucketName:
    Type: String
    Default: www.whatdoeslambdasupport.com
    Description: The S3 bucket to use for hosting the web files.
    MinLength: 1

Resources:
  FourThree:
    Type: 'AWS::Serverless::Function'
    DependsOn: LambdaRole
    Properties:
      Handler: index.handler
      Runtime: nodejs4.3
      CodeUri: ./functions/app
      Description: >-
        WDLS 4.3
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          IS_DEFAULT_RUNTIME: 'FALSE'
          S3_WEBSITE_BUCKET: !Ref WebsiteBucketName

  SixTen:
    Type: 'AWS::Serverless::Function'
    DependsOn: LambdaRole
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: ./functions/app
      Description: >-
        WDLS 6.10
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          IS_DEFAULT_RUNTIME: 'TRUE'
          S3_WEBSITE_BUCKET: !Ref WebsiteBucketName

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com

  FunctionExecutor:
    Type: 'Custom::FunctionExecutor'
    DependsOn:
      - ExecuteFunction
      - FourThree
      - SixTen
    Properties:
      ServiceToken: !GetAtt ExecuteFunction.Arn
      DeploymentTime: !Ref DeploymentTime
      Functions:
        - !GetAtt FourThree.Arn
        - !GetAtt SixTen.Arn

  ExecuteFunction:
    Type: 'AWS::Serverless::Function'
    DependsOn: ExecuteFunctionRole
    Properties:
      Handler: index.handler
      Runtime: nodejs6.10
      CodeUri: ./functions/executor
      Description: >-
        WDLS function executor during CloudFormation
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt ExecuteFunctionRole.Arn

  ExecuteFunctionRole:
    Type: AWS::IAM::Role
    DependsOn:
      - FourThree
      - SixTen
    Properties:
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        -
          PolicyName: InvokeLambdaFunctions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            -
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !GetAtt FourThree.Arn
                - !GetAtt SixTen.Arn

  S3AccessPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn:
      - LambdaRole
      - Website
    Properties:
      PolicyName: WDLS_S3Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Resource:
              - !Join [ '', [ 'arn:aws:s3:::', !Ref WebsiteBucketName, '/*' ] ]
      Roles:
        - !Ref LambdaRole

  Website:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref WebsiteBucketName
      WebsiteConfiguration:
        ErrorDocument: 404.html
        IndexDocument: index.html
